buildscript {
    repositories {
        mavenCentral()
        maven {
            name = 'forge'
            url = 'http://files.minecraftforge.net/maven'
        }
        maven {
            name = 'sonatype'
            url = 'https://oss.sonatype.org/content/repositories/snapshots/'
        }
        maven {
            name = 'jboss'
            url = 'http://repository.jboss.org/nexus/content/groups/public/'
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
        classpath 'org.hibernate.build.gradle:gradle-maven-publish-auth:2.0.1'
    }
}

// Apply plugins
apply plugin: 'forge'
apply plugin: 'maven-publish'
apply plugin: 'maven-publish-auth'

// Basic project information
group = 'de.unratedfilms'
version = '1.1.0-SNAPSHOT'

// Minimum java version
sourceCompatibility = 1.8
targetCompatibility = 1.8

minecraft {
    version = '1.7.10-10.13.4.1614-1.7.10'
    runDir = 'run'

    // Replace strings with constants in the source
    replace "@MOD_VERSION@", project.version
}

repositories {
    mavenCentral()
    maven {
        name = 'quartercode'
        url = 'http://repo.quartercode.com/content/groups/public/'
    }
}

dependencies {
    compile 'de.unratedfilms:guilib:1.2.0-SNAPSHOT:dev'
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property 'version', project.version
    inputs.property 'mcversion', project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

// Task for creating a deobfuscated JAR; needed by the projects which use this library
task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'dev'
}

// Task for creating a source jar
task sourceJar(type: Jar) {
    from sourceSets.main.java
    from sourceSets.main.resources
    classifier = 'sources'
}

// Task for creating a javadoc jar
task javadocJar(type: Jar, dependsOn: javadoc) {
    from javadoc.destinationDir
    classifier = 'javadoc'
}

// Publish the project artifacts to a maven repository
publishing {
    publications {
        maven(MavenPublication) {
            artifact jar
            artifact deobfJar
            artifact sourceJar
            artifact javadocJar
        }
    }
    repositories {
        maven {
            name = 'quartercode-deployment'
            url = version.endsWith('-SNAPSHOT') ?
                    'http://repo.quartercode.com/content/repositories/snapshots/' :
                    'http://repo.quartercode.com/content/repositories/releases/'
        }
    }
}
